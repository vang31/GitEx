package jm.task.core.jdbc.dao;

import jm.task.core.jdbc.model.User;
import jm.task.core.jdbc.util.Util;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
//Нужно использовать объект типа статмент и резалт сет.
//
//public class UserDaoJDBCImpl implements UserDao {
//    private Util util = new Util();
//
//    public UserDaoJDBCImpl() {
//
//    }
//
//    public void createUsersTable() {
//        //id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY - автоувеличение
//        String createUser = "CREATE TABLE IF NOT EXISTS Users(id serial,  " +
//                "firstname VARCHAR(30) not null, lastName VARCHAR(30) not null, age int not null);";
//        try {
//            Statement stat = util.connectToDB().createStatement();
//            stat.executeUpdate(createUser);
//            System.out.println("создание таблицы прошло успешно");
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }
//
//    public void dropUsersTable() {
//        String dropUser = "DROP TABLE Users;";
//        try {
//            Statement stat = util.connectToDB().createStatement();
//            stat.executeUpdate(dropUser);
//            System.out.println("Удаление таблицы - выполнено");
//
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }
//
//    //посмотреть как это сделать при создании...
//    public void saveUser(String name, String lastName, byte age) {
//        String saveUser = "INSERT INTO Users(firstname, lastName, age) VALUES(" + "'" + name + "'"
//                + "," + "'" + lastName + "'" + "," + age + ")";
//        try {
//            Statement statement = util.connectToDB().createStatement();
//            statement.executeUpdate(saveUser);
//
//            System.out.println("добавление в таблицу выполнено успешно!");
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }
//
//    public void removeUserById(long id) {
//        String removeUser = "DELETE FROM Users " +
//                "WHERE id =" + id;
//        try {
//            Statement stat = util.connectToDB().createStatement();
//            stat.executeUpdate(removeUser);
//            System.out.println("удаление по id успешно выполнено");
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }
//
//    public List<User> getAllUsers() {
//        //если нужно возвращать значение.
//        //прочитать про резалт сет как работает
//        List<User> user = new ArrayList<>();
//        try {
//            Statement stat = util.connectToDB().createStatement();
//            ResultSet rs = stat.executeQuery("SELECT * FROM Users");
//            while(rs.next()){
//                User user1 = new User();
//                user1.setId(rs.getLong("id"));
//                user1.setName(rs.getString("firstname"));
//                user1.setLastName(rs.getString("lastName"));
//                user1.setAge(rs.getByte("age"));
//                user.add(user1);
//            }
//
//        } catch(SQLException e){
//            e.printStackTrace();
//        }
//
//        return user;
//    }
//
//    public void cleanUsersTable() {
//        String cleanUser = "DELETE FROM Users;";
//        try {
//            Statement stat = util.connectToDB().createStatement();
//            stat.executeUpdate(cleanUser);
//            System.out.println("очистка таблицы выполнено");
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }
//}
